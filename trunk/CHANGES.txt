0.6.0 - 0.6.1
----------
* Changed retire() behaviour, to propagate a retire pill. Added ChannelRetireException.
* Fixed possible deadlock, when doing several concurrent alternations on an input
  and output guard. This is an issue in pycsp.threads and pycsp.net.
 - See examples/problems/deadlock_doing_alternation_on_input_and_output_pre_0.6.1.py
* Added a Pyro nameserver lookup to the PyroServerProcess thread, to avoid sharing
  of a global Pyro nameserver proxy, which is not recommended by Pyro.
* Changed greenlet dependency to the greenlet 0.2 module available at http://pypi.python.org/pypi/greenlet

0.5.2 - 0.6.0
----------
* Added 3 new implementations of PyCSP
 - Processes : Uses the multiprocessing module.
 - Greenlets(coroutine) : Uses a third party py.magic.greenlet module from pylib.
 - Net : Uses Pyro to enable all channels as remote channels.
* Modified examples and tests to support all 4 implementations (threads, processes,
  greenlets, net)
* import pycsp, defaults to pycsp.threads
* Added a TestSuite system to doctest. Execute python __init__.py to run testsuites.


0.5.1 - 0.5.2
----------
* Added doctest items to classes and functions.
* Fixed Sequence(*plist) to accept list of processes.


0.5.0 - 0.5.1
----------
* Fixed race condition with poisoning.
* Optimized ChannelEnd implementation.
* Added Spawn for starting background CSP processes.
* Added Skip and Timeout guards.
* Added @choice decorator to clearify where actions are defined. Usage is optional.
* Added @io decorator for compatibility with PyCSP coroutine implementation.
* A nameless Channel requests a name using uuid.uuid1().


all versions - 0.5.0
----------
The PyCSP library has been completely rewritten.

There is no backwards compatibility.

For now please look at the examples for documentation on how to use the library.
